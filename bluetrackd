#!/usr/bin/python
#-*- coding: utf-8 -*-
### BEGIN INIT INFO
# Provides:          bluetrackd
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop bluetracker bluetooth scanner
### END INIT INFO-
#
# This file belongs to Bluetracker.
#
# Bluetracker is a Bluetooth device scanner daemon.
# Copyright (C) 2009  Roel Huybrechts
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


import sys
import os

try:
    from bluetracker import bluetracker
except:
    sys.stderr.write("Error: bluetracker not installed.\n")
    sys.exit(1)

LOGFILE = '/var/log/bluetracker/bluetracker.log'
LOCKFILE = '/var/run/bluetracker.pid'

if __name__ == '__main__':
    try:
        for file in [LOGFILE, LOCKFILE]:
            f = open(file, 'a')
            f.close()
    except:
        sys.stderr.write("This daemon needs write access to %s and %s\n" %
            (LOGFILE, LOCKFILE))
        sys.exit(1)

    main = bluetracker.Main(LOCKFILE, LOGFILE)
    
    if len(sys.argv) == 2:
        if 'start' == sys.argv[1]:
            main.start()
        elif 'stop' == sys.argv[1]:
            main.stop()
        elif 'restart' or 'force-reload' == sys.argv[1]:
            main.restart()
        else:
            print "Unknown command"
            sys.exit(2)
        sys.exit(0)
    else:
        print "usage: %s start|stop|restart|force-reload" % sys.argv[0]
        sys.exit(2)    
